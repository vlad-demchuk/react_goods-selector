{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","currentGoods","inputGood","newArray","this","includes","index","indexOf","splice","push","className","length","slice","join","type","onClick","setState","map","good","selectAndRemove","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,qDAGjB,SAAgBC,GACd,IAAMC,EAAQ,YAAOC,KAAKJ,MAAMC,cAEhC,GAAIE,EAASE,SAASH,GAAY,CAChC,IAAMI,EAAQH,EAASI,QAAQL,GAE/BC,EAASK,OAAOF,EAAO,QAEvBH,EAASM,KAAKP,GAGhB,OAAOC,I,oBAGT,WAAU,IAAD,OACCF,EAAiBG,KAAKJ,MAAtBC,aAER,OACE,sBAAKS,UAAU,MAAf,UACE,gDAE2B,IAAxBT,EAAaU,QAAgB,oBACL,IAAxBV,EAAaU,QAAb,UAAgCV,EAAa,GAA7C,gBACwB,IAAxBA,EAAaU,QAAb,UAAgCV,EAAa,GAA7C,gBAAuDA,EAAa,GAApE,iBACAA,EAAaU,OAAS,GAAtB,UAA8BP,KAAKJ,MAAMC,aACvCW,MAAM,GAAI,GACVC,KAAK,MAFP,gBAEoBZ,EAAaA,EAAaU,OAAS,GAFvD,oBAKH,wBACEG,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEf,aAAc,MAHlC,mBASA,6BACGH,EAAgBmB,KAAI,SAAAC,GAAI,OACvB,+BACGA,EACD,wBACEJ,KAAK,SACLC,QAAS,WACP,EAAKC,SAAS,CAAEf,aAAc,EAAKkB,gBAAgBD,MAHvD,SAMG,EAAKlB,MAAMC,aAAaI,SAASa,GAC9B,SACA,mBAMXpB,EAAgBa,c,GA7DPS,IAAMC,WAmETtB,ICpFfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.227dfa88.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  currentGoods: string[] | string;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    currentGoods: ['Jam'],\n  };\n\n  selectAndRemove(inputGood: string) {\n    const newArray = [...this.state.currentGoods];\n\n    if (newArray.includes(inputGood)) {\n      const index = newArray.indexOf(inputGood);\n\n      newArray.splice(index, 1);\n    } else {\n      newArray.push(inputGood);\n    }\n\n    return newArray;\n  }\n\n  render() {\n    const { currentGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Selected good:\n          {currentGoods.length === 0 && 'No goods selected'}\n          {currentGoods.length === 1 && `${currentGoods[0]} is selected`}\n          {currentGoods.length === 2 && `${currentGoods[0]} and ${currentGoods[1]} are selected`}\n          {currentGoods.length > 2 && `${this.state.currentGoods\n            .slice(0, -1)\n            .join(', ')} and ${currentGoods[currentGoods.length - 1]} are selected`}\n        </h1>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ currentGoods: '' });\n          }}\n        >\n          reset\n        </button>\n\n        <ul>\n          {goodsFromServer.map(good => (\n            <li>\n              {good}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.setState({ currentGoods: this.selectAndRemove(good) });\n                }}\n              >\n                {this.state.currentGoods.includes(good)\n                  ? 'Remove'\n                  : 'Select'}\n              </button>\n            </li>\n          ))}\n        </ul>\n\n        {goodsFromServer.length}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}