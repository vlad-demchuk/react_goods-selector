{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","currentGoods","printGoods","goods","length","join","slice","inputGood","newArrayOfGoods","this","includes","indexToDelete","indexOf","splice","push","className","type","onClick","setState","map","good","classNames","selected","checkSelected","selectOrRemove","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,WAAa,SAACC,GACZ,OAAqB,IAAjBA,EAAMC,OACD,oBAGY,IAAjBD,EAAMC,OACF,GAAN,OAAUD,EAAM,GAAhB,gBAGmB,IAAjBA,EAAMC,OACF,GAAN,OAAUD,EAAME,KAAK,SAArB,iBAGI,GAAN,OAAUF,EACPG,MAAM,GAAI,GACVD,KAAK,MAFR,gBAEqBF,EAAMA,EAAMC,OAAS,GAF1C,kB,oDAKF,SAAeG,GACb,IAAMC,EAAe,YAAOC,KAAKT,MAAMC,cAEvC,GAAIO,EAAgBE,SAASH,GAAY,CACvC,IAAMI,EAAgBH,EAAgBI,QAAQL,GAE9CC,EAAgBK,OAAOF,EAAe,QAEtCH,EAAgBM,KAAKP,GAGvB,OAAOC,I,2BAGT,SAAcD,GACZ,OAAOE,KAAKT,MAAMC,aAAaS,SAASH,K,oBAG1C,WAAU,IAAD,OACCN,EAAiBQ,KAAKT,MAAtBC,aAER,OACE,sBAAKc,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAIA,UAAU,eAAd,2BAE2B,IAAxBd,EAAaG,QACZ,wBACEW,UAAU,8BACVC,KAAK,SACLC,QAAS,WACP,EAAKC,UAAS,iBAAO,CACnBjB,aAAc,QALpB,sBAaJ,oBAAIc,UAAU,cAAd,SACGN,KAAKP,WAAWD,QAIrB,oBAAIc,UAAU,UAAd,SACGjB,EAAgBqB,KAAI,SAAAC,GAAI,OACvB,qBAEEL,UAAWM,IACT,gBACA,CAAEC,SAAU,EAAKC,cAAcH,KAJnC,UAOGA,EAED,wBACEL,UAAWM,IACT,MACA,kBACA,CACE,eAAgB,EAAKE,cAAcH,GACnC,aAAc,EAAKG,cAAcH,KAGrCJ,KAAK,SACLC,QAAS,WACP,EAAKC,UAAS,iBAAO,CACnBjB,aAAc,EAAKuB,eAAeJ,QAZxC,SAgBG,EAAKG,cAAcH,GAChB,SACA,aA1BDA,e,GAvEDK,IAAMC,WA2GT3B,IC7Hf4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.48e62938.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  currentGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    currentGoods: ['Jam'],\n  };\n\n  printGoods = (goods: string[]) => {\n    if (goods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (goods.length === 1) {\n      return `${goods[0]} is selected`;\n    }\n\n    if (goods.length === 2) {\n      return `${goods.join(' and ')} are selected`;\n    }\n\n    return `${goods\n      .slice(0, -1)\n      .join(', ')} and ${goods[goods.length - 1]} are selected`;\n  };\n\n  selectOrRemove(inputGood: string) {\n    const newArrayOfGoods = [...this.state.currentGoods];\n\n    if (newArrayOfGoods.includes(inputGood)) {\n      const indexToDelete = newArrayOfGoods.indexOf(inputGood);\n\n      newArrayOfGoods.splice(indexToDelete, 1);\n    } else {\n      newArrayOfGoods.push(inputGood);\n    }\n\n    return newArrayOfGoods;\n  }\n\n  checkSelected(inputGood: string) {\n    return this.state.currentGoods.includes(inputGood);\n  }\n\n  render() {\n    const { currentGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"goods\">\n          <h1 className=\"goods__title\">\n            Selected good:\n            {currentGoods.length !== 0 && (\n              <button\n                className=\"goods__clear btn btn-danger\"\n                type=\"button\"\n                onClick={() => {\n                  this.setState(() => ({\n                    currentGoods: [],\n                  }));\n                }}\n              >\n                Clear\n              </button>\n            )}\n          </h1>\n          <h2 className=\"goods__list\">\n            {this.printGoods(currentGoods)}\n          </h2>\n        </div>\n\n        <ul className=\"selects\">\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={classNames(\n                'selects__item',\n                { selected: this.checkSelected(good) },\n              )}\n            >\n              {good}\n\n              <button\n                className={classNames(\n                  'btn',\n                  'selects__button',\n                  {\n                    'btn-success': !this.checkSelected(good),\n                    'btn-danger': this.checkSelected(good),\n                  },\n                )}\n                type=\"button\"\n                onClick={() => {\n                  this.setState(() => ({\n                    currentGoods: this.selectOrRemove(good),\n                  }));\n                }}\n              >\n                {this.checkSelected(good)\n                  ? 'Remove'\n                  : 'Select'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}